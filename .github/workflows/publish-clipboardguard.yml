name: Publish ClipboardGuardApp

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'App version (e.g., 1.0.0 for 1.0.0.X)'
        required: true
      release_type:
        description: 'Type of release'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - prerelease
          - beta
          - alpha
          - dev
      configuration:
        description: 'Build Configuration'
        required: true
        default: 'Release'
        type: choice
        options:
          - Debug
          - Release

jobs:
  build_and_publish:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Restore dependencies
        run: dotnet restore ClipboardGuardApp/ClipboardGuardApp.csproj

      - name: Build ClipboardGuardApp
        run: dotnet build ClipboardGuardApp/ClipboardGuardApp.csproj --configuration ${{ github.event.inputs.configuration }} --no-restore

      - name: Publish ClipboardGuardApp
        run: |
          # Get current year for copyright
          $CURRENT_YEAR = (Get-Date).Year

          # Construct AssemblyVersion and FileVersion (e.g., 1.0.0.123)
          $ASSEMBLY_FILE_VERSION = "${{ github.event.inputs.version }}.${{ github.run_number }}"

          # Construct Product/Package Version (SemVer-compliant, e.g., 1.0.0 or 1.0.0-beta.123)
          $PRODUCT_VERSION = "${{ github.event.inputs.version }}"
          if ("${{ github.event.inputs.release_type }}" -ne "release") {
            $PRODUCT_VERSION = "${{ github.event.inputs.version }}-${{ github.event.inputs.release_type }}.${{ github.run_number }}"
          }

          # Construct AssemblyInformationalVersion (detailed human-readable, e.g., 1.0.0.123-prerelease-Debug)
          $INFORMATIONAL_VERSION = "${{ github.event.inputs.version }}.${{ github.run_number }}-${{ github.event.inputs.release_type }}-${{ github.event.inputs.configuration }}"

          dotnet publish ClipboardGuardApp/ClipboardGuardApp.csproj `
          --configuration ${{ github.event.inputs.configuration }} `
          --runtime win-x64 `
          --self-contained true `
          --output publish `
          /p:UseAppHost=true `
          /p:PublishTrimmed=true `
          # /p:PublishSingleFile=true `
          # /p:IncludeAllContentForSelfExtract=true `
          /p:AssemblyVersion="${ASSEMBLY_FILE_VERSION}" `
          /p:FileVersion="${ASSEMBLY_FILE_VERSION}" `
          /p:Version="${PRODUCT_VERSION}" `
          /p:AssemblyInformationalVersion="${INFORMATIONAL_VERSION}" `
          /p:Company="${{ github.repository_owner }}" `
          /p:Product="${{ github.repository }}" `
          /p:Copyright="Copyright Â© ${CURRENT_YEAR} ${{ github.repository_owner }}. All rights reserved. Licensed under MIT." `
          /p:SourceRevisionId="${{ github.sha }}" `
          /p:RepositoryUrl="${{ github.server_url }}/${{ github.repository }}" `
          /p:ReleaseType="${{ github.event.inputs.release_type }}"

      - name: Archive published artifact
        uses: actions/upload-artifact@v4
        with:
          name: ClipboardGuardApp-Windows-x64-${{ github.event.inputs.configuration }}
          path: publish/

      - name: Create GitHub Release
        if: github.event_name == 'workflow_dispatch'
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: ClipboardGuardApp Release v${{ github.event.inputs.version }} (Build ${{ github.run_number }})
          body: |
            ## Release Details
            - **Version:** ${{ github.event.inputs.version }}
            - **Build Number:** ${{ github.run_number }}
            - **Release Type:** ${{ github.event.inputs.release_type }}
            - **Configuration:** ${{ github.event.inputs.configuration }}
            - **Informational Version:** ${{ github.event.inputs.version }}.${{ github.run_number }}-${{ github.event.inputs.release_type }}-${{ github.event.inputs.configuration }}
            - **Commit SHA:** ${{ github.sha }}
            - **Repository:** ${{ github.server_url }}/${{ github.repository }}

            A self-contained executable for Windows (x64).

            ---

            *(Generated release notes will appear below)*
          draft: false
          prerelease: ${{ github.event.inputs.release_type == 'prerelease' || github.event.inputs.release_type == 'beta' || github.event.inputs.release_type == 'alpha' || github.event.inputs.release_type == 'dev' }}
          generate_release_notes: true
          files: publish/*

