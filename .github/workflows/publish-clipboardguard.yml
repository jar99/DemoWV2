name: Publish ClipboardGuardApp

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - prerelease
          - beta
          - alpha
          - dev
      configuration:
        description: 'Build Configuration'
        required: true
        default: 'Release'
        type: choice
        options:
          - Debug
          - Release
      runtime:
        description: 'Target runtime (e.g., win-x64, win-x86)'
        required: false
        default: 'win-x64'
        type: choice
        options:
          - win-x64
          - win-x86
          - win-arm64
      verbosity:
        description: 'Verbosity level for dotnet commands'
        required: false
        default: 'minimal'
        type: choice
        options:
          - quiet
          - minimal
          - normal
          - detailed
          - diagnostic

jobs:
  build_and_publish:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Restore dependencies
        run: dotnet restore ClipboardGuardApp/ClipboardGuardApp.csproj

      - name: Build ClipboardGuardApp
        run: dotnet build ClipboardGuardApp/ClipboardGuardApp.csproj --configuration ${{ github.event.inputs.configuration }} --no-restore

      - name: Read version from VERSION file
        id: get_version
        run: |
          $version = Get-Content ClipboardGuardApp/VERSION | Select-Object -First 1
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Get runtime and platform
        id: get_runtime_platform
        run: |
          $RUNTIME = "${{ github.event.inputs.runtime }}"
          switch ($RUNTIME) {
            "win-x64" { $PLATFORM = "x64" }
            "win-x86" { $PLATFORM = "x86" }
            "win-arm64" { $PLATFORM = "AnyCPU" }
            default { $PLATFORM = "AnyCPU" }
          }
          echo "RUNTIME=$RUNTIME" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "PLATFORM=$PLATFORM" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "runtime=$RUNTIME" >> $env:GITHUB_OUTPUT
          echo "platform=$PLATFORM" >> $env:GITHUB_OUTPUT

      - name: Publish ClipboardGuardApp
        run: |
          # Read platform and runtime from environment variables
          $RUNTIME = "$env:RUNTIME"
          $PLATFORM = "$env:PLATFORM"
          $RELEASE_TYPE = "${{ github.event.inputs.release_type }}"

          # Read version from environment variables
          $VERSION = "$env:VERSION"

          # Get short commit id for SourceRevisionId
          $SHORT_COMMIT = (git rev-parse --short HEAD).Trim()
          $RUN_NUMBER = "${{ github.run_number }}"

          # Set additional metadata for the build
          $PACKAGE_PROJECT_URL = "${{ github.server_url }}/${{ github.repository }}"
          $REPOSITORY_URL = "${{ github.server_url }}/${{ github.repository }}"
          $REPOSITORY_TYPE = "git"
          $REPOSITORY_BRANCH = "${{ github.ref_name }}"
          $REPOSITORY_COMMIT = "${{ github.sha }}"


          dotnet publish ClipboardGuardApp/ClipboardGuardApp.csproj `
          --configuration ${{ github.event.inputs.configuration }} `
          --runtime $RUNTIME `
          --self-contained true `
          --output publish `
          /p:Platform="$PLATFORM" `
          /p:UseAppHost=true `
          /p:PublishSingleFile=true `
          /p:IncludeAllContentForSelfExtract=true `
          /p:Company="${{ github.repository_owner }}" `
          /p:Authors="${{ github.repository_owner }}" `
          /p:SourceRevisionId="$SHORT_COMMIT" `
          /p:BuildNumber="$RUN_NUMBER" `
          /p:ReleaseType="$RELEASE_TYPE" `
          /p:RepositoryUrl="$REPOSITORY_URL" `
          /p:PackageProjectUrl="$PACKAGE_PROJECT_URL" `
          /p:RepositoryType="$REPOSITORY_TYPE" `
          /p:RepositoryBranch="$REPOSITORY_BRANCH" `
          /p:RepositoryCommit="$REPOSITORY_COMMIT" `
          --nologo --verbosity ${{ github.event.inputs.verbosity }}`

      - name: Archive published artifact
        uses: actions/upload-artifact@v4
        with:
          name: ClipboardGuardApp-Windows-x64-${{ github.event.inputs.configuration }}
          path: publish/

      - name: Create GitHub Release
        if: github.event_name == 'workflow_dispatch'
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: ClipboardGuardApp Release v${{ github.event.inputs.version }} (Build ${{ github.run_number }})
          body: |
            ## Release Details
            - **Version:** ${{ github.event.inputs.version }}
            - **Build Number:** ${{ github.run_number }}
            - **Release Type:** ${{ github.event.inputs.release_type }}
            - **Configuration:** ${{ github.event.inputs.configuration }}
            - **Informational Version:** ${{ github.event.inputs.version }}.${{ github.run_number }}-${{ github.event.inputs.release_type }}-${{ github.event.inputs.configuration }}
            - **Commit SHA:** ${{ github.sha }}
            - **Repository:** ${{ github.server_url }}/${{ github.repository }}

            A self-contained executable for Windows (x64).

            ---

            *(Generated release notes will appear below)*
          draft: false
          prerelease: ${{ github.event.inputs.release_type == 'prerelease' || github.event.inputs.release_type == 'beta' || github.event.inputs.release_type == 'alpha' || github.event.inputs.release_type == 'dev' }}
          generate_release_notes: true
          files: publish/*

